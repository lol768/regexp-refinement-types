@book{benjaminpierce2002,
    author = {Benjamin Pierce},
    title = {Types and Programming Languages},
    publisher = {The MIT Press},
    year = {2002}
}
@techreport{msftttmr2012,
    author = {Livshits, Ben},
    title = {Dynamic Taint Tracking in Managed Runtimes},
    year = {2012},
    month = {November},
    abstract = {
    This paper provides a taxonomy of runtime taint tracking approaches for managed code, such as code written in Java, C#, PHP, Perl, or Ruby. It covers main applications of data tainting such as preventing web application vulnerabilities including cross-site scripting and SQL injection attacks, along with disallowing privacy-sensitive data leaks. In addition to giving an overview of related literature from the last decade, this paper provides guidance and describes the trade-offs of different instrumentation approaches. Lastly, we provide a list of open problems whose solutions would aid practical adaption of runtime tainting on a wider scale.
    },
    publisher = {Microsoft Research},
    url = {https://www.microsoft.com/en-us/research/publication/dynamic-taint-tracking-in-managed-runtimes/},
}

% Ref'd from Ranjit Jhala's Language-Integrated Verification talk
@article{sadowski2018lessons,
    title     = "Lessons from Building Static Analysis Tools at Google",
    author    = "SADOWSKI, CAITLIN and AFTANDILIAN, EDWARD and EAGLE, ALEX and MILLER-CUSHON, LIAM and JASPAN, CIERA",
    journal   = "Communigcations of the ACM",
    volume    = "61",
    number    = "4",
    year      = "2018"
}

@phdthesis{nelson1980,
    author    = "Nelson, Charles Gregory",
    title     = "Techniques for Program Verification",
    year      = "1980",
    note      = "AAI8011683",
    publisher = "Stanford University",
    address   = "Stanford, CA, USA",
}

% + https://www.joachim-breitner.de/blog/734-Finding_bugs_in_Haskell_code_by_proving_it
